language: php

services:
  - docker

php:
    - "5.6"
    - "7.2"
    - "7.3"

services:
    - mysql

env:
    - WP_VERSION=latest WP_MULTISITE=0 #Current stable release
    - INSTALL_WORDPRESS: true

# Test WP 5.1 and 5.2 and on PHP 5.6, 7.2 and 7.3 (w and w/o multisite enabled)

matrix:
  include:
    # current stable release w/ multisite
    - php: "5.6"
      env: WP_VERSION=5.1 WP_MULTISITE=0
    - php: "7.2"
      env: WP_VERSION=5.1 WP_MULTISITE=0
    - php: "7.3"
      env: WP_VERSION=5.1 WP_MULTISITE=0
    - php: "5.6"
      env: WP_VERSION=5.1 WP_MULTISITE=1
    - php: "7.2"
      env: WP_VERSION=5.1 WP_MULTISITE=1
    - php: "7.3"
      env: WP_VERSION=5.1 WP_MULTISITE=1
    - php: "5.6"
      env: WP_VERSION=5.2 WP_MULTISITE=0
    - php: "7.2"
      env: WP_VERSION=5.2 WP_MULTISITE=0
    - php: "7.3"
      env: WP_VERSION=5.2 WP_MULTISITE=0
    - php: "5.6"
      env: WP_VERSION=5.2 WP_MULTISITE=1
    - php: "7.2"
      env: WP_VERSION=5.2 WP_MULTISITE=1
    - php: "7.3"
      env: WP_VERSION=5.2 WP_MULTISITE=1

before_install:
  - nvm install --latest-npm
  - |
    if [[ "$INSTALL_WORDPRESS" = "true" ]]; then
      # Upgrade docker-compose.
      sudo rm /usr/local/bin/docker-compose
      curl -sL https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` > docker-compose
      chmod +x docker-compose
      sudo mv docker-compose /usr/local/bin
    fi

install:
  - npm ci
  - npm run build
  - |
    if [[ "$INSTALL_WORDPRESS" = "true" ]]; then
      # Download and unpack WordPress.
      curl -sL https://github.com/WordPress/WordPress/archive/master.zip -o /tmp/wordpress-latest.zip
      unzip -q /tmp/wordpress-latest.zip -d /tmp
      mkdir -p wordpress/src
      mv /tmp/WordPress-master/* wordpress/src
      # Create the upload directory with permissions that Travis can handle.
      mkdir -p wordpress/src/wp-content/uploads
      chmod 767 wordpress/src/wp-content/uploads
      # Grab the tools we need for WordPress' local-env.
      curl -sL https://github.com/WordPress/wordpress-develop/archive/master.zip -o /tmp/wordpress-develop.zip
      unzip -q /tmp/wordpress-develop.zip -d /tmp
      mv \
        /tmp/wordpress-develop-master/tools \
        /tmp/wordpress-develop-master/tests \
        /tmp/wordpress-develop-master/.env \
        /tmp/wordpress-develop-master/docker-compose.yml \
        /tmp/wordpress-develop-master/wp-cli.yml \
        /tmp/wordpress-develop-master/*config-sample.php \
        /tmp/wordpress-develop-master/package.json wordpress
      # Install WordPress.
      cd wordpress
      npm install dotenv wait-on
      npm run env:start
      sleep 10
      npm run env:install
      cd ..
      # Connect Edit Flow to WordPress.
      npm run env connect
      npm run env cli plugin activate Edit-Flow
    fi

before_script:
    - bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
    - export COMPOSER_BIN_DIR="$HOME/.config/composer/vendor/bin"
    - export PATH="$COMPOSER_BIN_DIR:$PATH"
    - |
        if [[ ${TRAVIS_PHP_VERSION:0:2} == "7." ]]; then
          composer global require "phpunit/phpunit=5.7.*"
        fi
    - phpunit --version
    - php --version

script: 
  - phpunit
  - npm run test-e2e

sudo: false
